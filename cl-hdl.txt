
inbox:
    allow for both destructive translation of symbols and also mangled names, and provide facilities for working with mangled names (e.g. tool to help select signals in gtkwave?)
    SYNC/REGISTER macros, and also UNLESS-MACRO (thing (doesn't have to be named exactly that))
    defwire declaration with optional :width, :to, and :from fields
    RTL REPL equivalent: you create a model, instantiate it, and then manually enter a signal instead of writing a program that generates that signal. imagine CLI commands that start a clock, connect a signal to a port, etc. and your schematic updates in real-time
    keep track of all symbols, user-provided and generated, and use to detect and warn about collisions! (such as when you create several backend values for a single user value (e.g. single name for synchronizer, multiple names for pieces its implemented with))
    wire vs reg models: aoi vs barrel shifter with loop
    to aid both hardware co-synthesis and hardware parallelization, include extra parallelization information in loops - that is, subdivide into "sequential FOR" that guarantees that all iterations will run in sequence, "parallel FOR" that gives no guarantees about scheduling, another parallel for that explicitly guarantees that all old values will be used, etc.
